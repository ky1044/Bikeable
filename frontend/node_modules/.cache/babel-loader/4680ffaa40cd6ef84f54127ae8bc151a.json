{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/DayChart.js\";\nimport React from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine, Label, Dot } from 'recharts';\n\nclass DayChart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showInfo !== this.props.showInfo || nextProps.log !== this.props.log;\n  }\n\n  render() {\n    let chartData = this.props.showInfo[this.props.id] && this.props.log[this.props.id] && this.props.log[this.props.id].map(log => ({\n      \"time\": log.datetime.substring(log.datetime.length - 5),\n      \"bikes\": log.bikes\n    })).slice(Math.max(this.props.log[this.props.id].length - 288, 0));\n    let xTicks = chartData && chartData.map(log => log.time).filter(time => time.substring(time.length - 2) === \"00\").concat(chartData.map(log => log.time)[chartData.length - 1]);\n    let yTicks = this.props.status && [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100].filter(x => x < this.props.status[this.props.id].docks).concat([this.props.status[this.props.id].docks]); // [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n\n    let timeNow = chartData.map(log => log.time)[chartData.length - 1];\n\n    const CustomDot = props => {\n      const {\n        value,\n        payload,\n        cx,\n        cy,\n        key\n      } = props;\n      return payload.time === timeNow && /*#__PURE__*/React.createElement(Dot, {\n        key: key,\n        cx: cx,\n        cy: cy,\n        r: 5,\n        fill: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"bike count over past 24 hours (every 5 mins)\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        bottom: 5,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#222222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"00:00\",\n      stroke: \"#444444\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"midnight\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"12:00\",\n      stroke: \"#444444\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"noon\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: timeNow,\n      stroke: \"white\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"current time\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 70\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      dot: CustomDot,\n      isAnimationActive: true,\n      type: \"monotone\",\n      dataKey: \"bikes\",\n      stroke: \"#00deff\",\n      strokeWidth: 5,\n      animationDuration: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"time\",\n      ticks: xTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"bikes\",\n      domain: [0, this.props.status[this.props.id].docks],\n      ticks: yTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      wrapperStyle: {\n        color: \"black\"\n      },\n      itemStyle: {\n        color: \"black\"\n      },\n      animationEasing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default DayChart;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/DayChart.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","ReferenceLine","Label","Dot","DayChart","Component","constructor","props","shouldComponentUpdate","nextProps","nextState","showInfo","log","render","chartData","id","map","datetime","substring","length","bikes","slice","Math","max","xTicks","time","filter","concat","yTicks","status","x","docks","timeNow","CustomDot","value","payload","cx","cy","key","top","right","bottom","left","textAnchor","fontSize","fill","color"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip ,ResponsiveContainer,ReferenceLine,Label,Dot} from 'recharts';\n\n\nclass  DayChart extends React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return  nextProps.showInfo!==this.props.showInfo||nextProps.log!==this.props.log ;    \n      }\n\n    \n    render(){\n        \n        let chartData = this.props.showInfo[this.props.id] && this.props.log[this.props.id] && this.props.log[this.props.id].map(log=>({\n            \"time\":log.datetime.substring(log.datetime.length-5),\n            \"bikes\":log.bikes\n        })).slice(Math.max(this.props.log[this.props.id].length - 288, 0))\n\n        let xTicks = chartData && chartData.map(log=>log.time).filter(time => time.substring(time.length-2) ===\"00\").concat(chartData.map(log=>log.time)[chartData.length-1])\n        let yTicks =this.props.status && [0,10,20,30,40,50,60,70,80,90,100].filter(x=>x<this.props.status[this.props.id].docks).concat([this.props.status[this.props.id].docks])\n        // [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n\n        let timeNow = chartData.map(log=>log.time)[chartData.length-1]\n\n        const CustomDot = (props) => {\n            const {value, payload,cx,cy ,key} = props;\n            return payload.time===timeNow&&<Dot key={key} cx={cx}cy={cy}r={5} fill=\"white\"/>\n        }\n        return(\n            <div>\n                <h4 align =\"center\">bike count over past 24 hours (every 5 mins)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart  data={chartData} margin={{ top: 5, right: 30, bottom: 5, left: 0 }}>\n                    \n                    <CartesianGrid  stroke=\"#222222\" />\n                    <ReferenceLine x={\"00:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"midnight\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <ReferenceLine x={\"12:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"noon\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <ReferenceLine x={timeNow} stroke=\"white\" label={<Label angle = {270} offset={10} value=\"current time\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <Line  dot = {CustomDot} isAnimationActive ={true}  type=\"monotone\" dataKey=\"bikes\" stroke=\"#00deff\" strokeWidth={5} animationDuration={500}/>\n                    <XAxis dataKey=\"time\" ticks = {xTicks}/>\n                    <YAxis  dataKey=\"bikes\" domain={[0, this.props.status[this.props.id].docks]} ticks = {yTicks}/>\n                    <Tooltip wrapperStyle = {{color:\"black\"}} itemStyle = {{color:\"black\"}} animationEasing = \"ease\"/>\n                    </LineChart>\n                </ResponsiveContainer>\n\n            </div>\n        )\n    }\n    }\nexport default DayChart"]},"metadata":{},"sourceType":"module"}