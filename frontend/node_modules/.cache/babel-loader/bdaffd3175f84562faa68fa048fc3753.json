{"ast":null,"code":"import _regeneratorRuntime from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _asyncToGenerator from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import L from\"leaflet\";import{Map,Marker,TileLayer,Tooltip,Popup}from\"react-leaflet\";var currentLocationIcon=new L.Icon({iconUrl:require('./mapImages/currentLocation.png'),iconAnchor:null,iconSize:new L.Point(20,20)});var stationIcon=new L.Icon({iconUrl:require('./mapImages/station2.png'),iconAnchor:null,iconSize:new L.Point(30,30)});function pan(map,latitude,longitutde){map.setView([latitude,longitutde],17);}function scrollToStation(_x){return _scrollToStation.apply(this,arguments);}function _scrollToStation(){_scrollToStation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var element;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:element=document.getElementById(\"station_\"+id);element.scrollIntoView({behavior:\"smooth\"});case 2:case\"end\":return _context.stop();}}},_callee);}));return _scrollToStation.apply(this,arguments);}var StationMap=/*#__PURE__*/function(_React$Component){_inherits(StationMap,_React$Component);var _super=_createSuper(StationMap);function StationMap(){var _this;_classCallCheck(this,StationMap);_this=_super.call(this);_this.mapRef=React.createRef();_this.state={newLocation:null};_this.resetNewLocation=_this.resetNewLocation.bind(_assertThisInitialized(_this));_this.NewLocation=_this.NewLocation.bind(_assertThisInitialized(_this));return _this;}_createClass(StationMap,[{key:\"resetNewLocation\",value:function resetNewLocation(){this.setState({newLocation:null});}},{key:\"NewLocation\",value:function NewLocation(e){this.setState({newLocation:e.latlng});}},{key:\"componentDidMount\",value:function componentDidMount(){var mapRef=this.mapRef.current.leafletElement;this.setState({mapRef:mapRef});}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){return nextProps.showMap!==this.props.showMap||nextProps.stations!==this.props.stations||nextState.newLocation!==this.state.newLocation;}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"map-container\",style:{height:this.props.view===\"Desktop\"?\"calc(100vh - 175px)\":300}},/*#__PURE__*/React.createElement(Map,{center:[this.props.selectedLocationLatitude,this.props.selectedLocationLongitude],zoom:16,ref:this.mapRef,onClick:this.NewLocation,onViewportChange:this.resetNewLocation},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"}),this.props.stations.map(function(stationID){return _this2.props.status[stationID];}).map(function(station){return/*#__PURE__*/React.createElement(Marker,{key:station.id,icon:stationIcon,position:[station.latitude,station.longitude],onClick:function onClick(event){_this2.props.handleMapClick(event,station.id);scrollToStation(station.id);pan(_this2.state.mapRef,station.latitude,station.longitude);_this2.resetNewLocation();}},/*#__PURE__*/React.createElement(Tooltip,{direction:\"top\",offset:[0,-4],opacity:.4,permanent:true},/*#__PURE__*/React.createElement(\"h4\",{style:{color:\"black\",opacity:1}},station.bikes,\"/\",station.docks)));}),/*#__PURE__*/React.createElement(Marker,{icon:currentLocationIcon,position:[this.props.selectedLocationLatitude,this.props.selectedLocationLongitude]}),this.state.newLocation&&/*#__PURE__*/React.createElement(Marker,{icon:currentLocationIcon,opacity:0.5,position:[this.state.newLocation.lat,this.state.newLocation.lng]}),this.state.newLocation&&/*#__PURE__*/React.createElement(Popup,{position:[this.state.newLocation.lat,this.state.newLocation.lng],onClose:this.resetNewLocation},/*#__PURE__*/React.createElement(\"h4\",{onClick:function onClick(event){_this2.props.handleMapLocationChange(_this2.state.newLocation.lat,_this2.state.newLocation.lng);},style:{color:\"black\",cursor:\"pointer\"}},\"set location\")))));}}]);return StationMap;}(React.Component);export default StationMap;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js"],"names":["React","L","Map","Marker","TileLayer","Tooltip","Popup","currentLocationIcon","Icon","iconUrl","require","iconAnchor","iconSize","Point","stationIcon","pan","map","latitude","longitutde","setView","scrollToStation","id","element","document","getElementById","scrollIntoView","behavior","StationMap","mapRef","createRef","state","newLocation","resetNewLocation","bind","NewLocation","setState","e","latlng","current","leafletElement","nextProps","nextState","showMap","props","stations","height","view","selectedLocationLatitude","selectedLocationLongitude","stationID","status","station","longitude","event","handleMapClick","color","opacity","bikes","docks","lat","lng","handleMapLocationChange","cursor","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\"\nimport { Map, Marker, TileLayer,Tooltip,Popup } from \"react-leaflet\";\n\nconst currentLocationIcon = new L.Icon({\n  iconUrl: require('./mapImages/currentLocation.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(20, 20),\n});\n\nconst stationIcon = new L.Icon({\n  iconUrl: require('./mapImages/station2.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(30, 30),\n});\n\nfunction pan(map,latitude,longitutde) {\n  map.setView([latitude,longitutde],17)\n}\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\"+id);\n  element.scrollIntoView({behavior: \"smooth\"});\n  }\n\n\nclass  StationMap extends React.Component{\n  \n  constructor() {\n    super()\n    this.mapRef = React.createRef();\n    this.state={\n      newLocation:null,\n    }\n\n    this.resetNewLocation = this.resetNewLocation.bind(this);\n    this.NewLocation = this.NewLocation.bind(this);\n  }\n\n  resetNewLocation() {\n    this.setState({ newLocation: null });\n  }\n\n  NewLocation(e) {\n    this.setState({ newLocation: e.latlng });\n  }\n\n\n  componentDidMount (){\n    const mapRef = this.mapRef.current.leafletElement\n    this.setState({mapRef:mapRef})\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return  nextProps.showMap!==this.props.showMap||nextProps.stations!==this.props.stations||nextState.newLocation!==this.state.newLocation ;    \n  }\n\n  render(){    \n\n    return (\n      <div>\n        <div className =\"map-container\" style={{height:this.props.view===\"Desktop\"?\"calc(100vh - 175px)\":300}}>\n            <Map center={[this.props.selectedLocationLatitude, this.props.selectedLocationLongitude]} zoom={16} ref = {this.mapRef} onClick={this.NewLocation} onViewportChange = {this.resetNewLocation}>\n            <TileLayer\n                url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n            />\n  \n            {this.props.stations.map(stationID=>(this.props.status[stationID])).map(station=>(\n\n              <Marker \n              key = {station.id} \n              icon = {stationIcon}\n              position = {[station.latitude,station.longitude]} \n              onClick = {(event)=>{this.props.handleMapClick(event,station.id);scrollToStation(station.id);pan(this.state.mapRef,station.latitude,station.longitude);this.resetNewLocation() }}>\n                <Tooltip direction='top' offset={[0, -4]} opacity={.4}  permanent>\n                         <h4 style= {{color:\"black\",opacity:1}}>{station.bikes}/{station.docks}</h4>\n                </Tooltip>\n              \n              </Marker>\n            \n            ))}\n            <Marker icon = {currentLocationIcon} position = {[this.props.selectedLocationLatitude, this.props.selectedLocationLongitude]}  />\n            {this.state.newLocation && <Marker  icon = {currentLocationIcon}  opacity = {0.5} position = {[this.state.newLocation.lat,this.state.newLocation.lng]}></Marker>}\n            {this.state.newLocation && <Popup position=  {[this.state.newLocation.lat,this.state.newLocation.lng]}  onClose = {this.resetNewLocation}> \n              <h4 onClick={(event)=>{this.props.handleMapLocationChange(this.state.newLocation.lat,this.state.newLocation.lng)}}  style= {{color:\"black\",cursor:\"pointer\"}}>set location</h4>\n            </Popup>}\n            \n            </Map>\n            \n        </div>\n        \n      </div>\n    );\n  }\n  \n}\nexport default StationMap"]},"metadata":{},"sourceType":"module"}