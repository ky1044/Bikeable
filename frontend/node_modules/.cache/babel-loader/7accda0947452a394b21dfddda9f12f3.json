{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport StationCard from \"./components/StationCard\";\nimport Footer from \"./components/Footer\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      warnings: null,\n      latitude: 40.7308,\n      longitude: 73.9973,\n      numStations: 5,\n      stations: [],\n      initialBikeCount: {},\n      logBikeCount: {},\n      status: {},\n      log: {},\n      logWeek: {},\n      hasloaded: false,\n      loadTime: null,\n      updateTime: null,\n      timeSinceUpdate: null,\n      timeSinceLoad: null,\n      showInfo: {}\n    };\n    this.getStationStatus = this.getStationStatus.bind(this);\n    this.setStationStatus = this.setStationStatus.bind(this);\n    this.handleShowChange = this.handleShowChange.bind(this);\n    this.getStationLog = this.getStationLog.bind(this);\n    this.setStationLog = this.setStationLog.bind(this);\n    this.getStationLogWeek = this.getStationLogWeek.bind(this);\n    this.setStationLogWeek = this.setStationLogWeek.bind(this);\n    this.loadMoreStations = this.loadMoreStations.bind(this);\n  }\n\n  getStationStatus() {\n    console.log(this.state.numStations);\n    fetch(`stationstatus/${this.state.numStations}/${this.state.latitude},${this.state.longitude}`).then(res => res.json()).then(data => this.setStationStatus(data));\n  }\n\n  setStationStatus(data) {\n    let stationList = data.stationStatus.map(station => {\n      return station.id;\n    });\n\n    if (!this.state.loadTime) {\n      this.setState({\n        loadTime: Date.now()\n      });\n    }\n\n    this.setState({\n      updateTime: Date.now()\n    });\n\n    for (let stationI = 0; stationI < stationList.length; stationI++) {\n      this.setState(prevState => ({\n        status: { ...prevState.status,\n          [stationList[stationI]]: data.stationStatus[stationI]\n        }\n      }));\n\n      if (stationList[stationI] in this.state.initialBikeCount) {\n        const prevStationState = this.state.logBikeCount[stationList[stationI]].concat([this.state.status[stationList[stationI]].bikes]);\n        this.setState(prevState => ({\n          logBikeCount: { ...prevState.logBikeCount,\n            [stationList[stationI]]: prevStationState\n          }\n        }));\n      } else {\n        this.setState(prevState => ({\n          showInfo: { ...prevState.showInfo,\n            [stationList[stationI]]: false\n          },\n          initialBikeCount: { ...prevState.initialBikeCount,\n            [stationList[stationI]]: this.state.status[stationList[stationI]].bikes\n          },\n          logBikeCount: { ...prevState.logBikeCount,\n            [stationList[stationI]]: [this.state.status[stationList[stationI]].bikes]\n          }\n        }));\n      }\n\n      this.getStationLog(stationList[stationI]);\n      this.getStationLogWeek(stationList[stationI]);\n    }\n\n    this.setState({\n      stations: stationList\n    });\n    this.setState({\n      hasloaded: true\n    });\n    console.log(\"updated station status\");\n  }\n\n  getStationLog(stationID) {\n    fetch(`stationlog/${stationID}`).then(res => res.json()).then(data => this.setStationLog(data, stationID)); // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLog(data, stationID) {\n    this.setState(prevState => ({\n      log: { ...prevState.log,\n        [stationID]: data.stationLog\n      }\n    }));\n  }\n\n  getStationLogWeek(stationID) {\n    fetch(`stationlogweek/${stationID}`).then(res => res.json()).then(data => this.setStationLogWeek(data, stationID)); // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLogWeek(data, stationID) {\n    this.setState(prevState => ({\n      logWeek: { ...prevState.logWeek,\n        [stationID]: data.stationLog\n      }\n    })); // console.log(this.state.logWeek[stationID])\n  }\n\n  handleShowChange(id) {\n    this.setState(prevState => {\n      const newShow = !prevState.showInfo[id];\n      return {\n        showInfo: { ...prevState.showInfo,\n          [id]: newShow\n        }\n      };\n    });\n  }\n\n  loadMoreStations() {\n    this.setState(prevState => ({\n      numStations: prevState.numStations + 5\n    }));\n    this.getStationStatus();\n  }\n\n  componentDidMount() {\n    this.getStationStatus();\n    setInterval(() => this.setState(prevState => ({\n      timeSinceUpdate: Date.now() - prevState.updateTime,\n      timeSinceLoad: Date.now() - prevState.loadTime\n    })), 100);\n    setInterval(() => this.getStationStatus(), 30000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }), !this.state.hasloaded && /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \"Loading...\"), this.state.stations.map(id => /*#__PURE__*/React.createElement(StationCard, Object.assign({\n      key: id,\n      id: id\n    }, this.state, {\n      handleShowChange: this.handleShowChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"load-more\",\n      onClick: () => this.loadMoreStations(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, this.state.hasloaded && \"Load More\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 120\n      }\n    })), this.state.hasloaded && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/App.js"],"names":["React","Header","StationCard","Footer","App","Component","constructor","state","warnings","latitude","longitude","numStations","stations","initialBikeCount","logBikeCount","status","log","logWeek","hasloaded","loadTime","updateTime","timeSinceUpdate","timeSinceLoad","showInfo","getStationStatus","bind","setStationStatus","handleShowChange","getStationLog","setStationLog","getStationLogWeek","setStationLogWeek","loadMoreStations","console","fetch","then","res","json","data","stationList","stationStatus","map","station","id","setState","Date","now","stationI","length","prevState","prevStationState","concat","bikes","stationID","stationLog","newShow","componentDidMount","setInterval","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport StationCard from \"./components/StationCard\"\nimport Footer from \"./components/Footer\"\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      warnings:null,\n      latitude :40.7308,\n      longitude:73.9973,\n      numStations:5,\n\n      stations:[],\n      initialBikeCount:{},\n      logBikeCount:{},\n      status:{},\n      log :{},\n      logWeek :{},\n      \n      hasloaded:false,\n\n      loadTime: null,\n      updateTime :null,\n      timeSinceUpdate:null,\n      timeSinceLoad:null,\n      \n      showInfo:{}\n    }\n    this.getStationStatus = this.getStationStatus.bind(this);\n    this.setStationStatus = this.setStationStatus.bind(this);\n    this.handleShowChange = this.handleShowChange.bind(this);\n    this.getStationLog = this.getStationLog.bind(this);\n    this.setStationLog = this.setStationLog.bind(this);\n    this.getStationLogWeek = this.getStationLogWeek.bind(this);\n    this.setStationLogWeek = this.setStationLogWeek.bind(this);\n    this.loadMoreStations = this.loadMoreStations.bind(this);\n\n    \n  }\n\n  getStationStatus(){\n    console.log(this.state.numStations)\n    fetch(`stationstatus/${this.state.numStations}/${this.state.latitude},${this.state.longitude}`).then(res=>res.json()).then(data=>(\n      this.setStationStatus(data)\n    ))\n  }\n  setStationStatus(data){\n\n    let stationList = data.stationStatus.map(station=>{return station.id})\n    \n    if (!this.state.loadTime){\n      this.setState({ \n        loadTime:Date.now()\n       });\n\n     }\n\n     this.setState({\n      updateTime: Date.now()\n    })\n         \n\n     for (let stationI = 0; stationI < stationList.length; stationI++){\n      this.setState(prevState=>({ \n        status:{\n          ...prevState.status,\n          [stationList[stationI]]:data.stationStatus[stationI]\n        }\n       }));\n      \n       if (stationList[stationI] in this.state.initialBikeCount){\n         const prevStationState = this.state.logBikeCount[stationList[stationI]].concat([this.state.status[stationList[stationI]].bikes])\n        this.setState(prevState=>({ \n          logBikeCount:{\n            ...prevState.logBikeCount,\n            [stationList[stationI]]:prevStationState\n          }\n         }));\n       }else{\n        this.setState(prevState=>({ \n          showInfo:{\n            ...prevState.showInfo,\n            [stationList[stationI]]:false\n          },\n          initialBikeCount:{\n            ...prevState.initialBikeCount,\n            [stationList[stationI]]:this.state.status[stationList[stationI]].bikes\n          },\n          logBikeCount:{\n            ...prevState.logBikeCount,\n            [stationList[stationI]]:[this.state.status[stationList[stationI]].bikes]\n          }\n         }));\n         \n       }\n       this.getStationLog(stationList[stationI])\n       this.getStationLogWeek(stationList[stationI])\n       \n     }\n     this.setState({\n      stations:stationList\n\n    })\n     \n     this.setState({ \n      hasloaded:true\n     });\n     console.log(\"updated station status\")\n  }\n\n  getStationLog(stationID){\n    fetch(`stationlog/${stationID}`).then(res=>res.json()).then(data=>(\n      this.setStationLog(data,stationID)\n    ))\n    // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLog(data,stationID){\n\n\n      this.setState(prevState=>({\n        log:{\n          ...prevState.log,\n          [stationID]:data.stationLog\n        }\n      }))\n    \n  }\n\n  getStationLogWeek(stationID){\n    fetch(`stationlogweek/${stationID}`).then(res=>res.json()).then(data=>(\n      this.setStationLogWeek(data,stationID)\n    ))\n    // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLogWeek(data,stationID){\n\n      this.setState(prevState=>({\n        logWeek:{\n          ...prevState.logWeek,\n          [stationID]:data.stationLog\n        }\n      }))\n      // console.log(this.state.logWeek[stationID])\n    \n  }\n\n  handleShowChange(id){\n    this.setState( prevState =>{\n      const newShow = !prevState.showInfo[id]\n      return { \n      showInfo:{\n        ...prevState.showInfo,\n        [id]:newShow\n      }\n     }})\n  }\n\n  loadMoreStations(){\n    this.setState(prevState=>({\n      numStations: prevState.numStations+5\n    }))\n    this.getStationStatus()\n\n  }\n\n  componentDidMount() {\n    this.getStationStatus()\n    setInterval(() => this.setState(prevState=>({ timeSinceUpdate: Date.now()-prevState.updateTime,timeSinceLoad:Date.now()-prevState.loadTime})), 100)\n    setInterval(() => this.getStationStatus(), 30000)\n      \n  }\n\n\n\n  render(){\n\n    return (\n    \n      <div>\n        <Header/>\n        {!this.state.hasloaded&&<h2 style={{textAlign: \"center\"}}>Loading...</h2>}\n\n        {this.state.stations.map( id =>(\n          <StationCard\n          key={id}\n          id = {id}\n          {...this.state}\n\n          handleShowChange = {this.handleShowChange}\n          />\n        ) )}\n        <div style = {{textAlign:\"center\"}}>\n          <div className = \"load-more\" onClick={()=>this.loadMoreStations() }>{this.state.hasloaded&&\"Load More\"}</div><br/>\n        </div>\n        {this.state.hasloaded&&<Footer/>}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}