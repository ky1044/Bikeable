{"ast":null,"code":"import _classCallCheck from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{LineChart,Line,CartesianGrid,XAxis,YAxis,Tooltip,ResponsiveContainer,ReferenceLine,Label,Dot}from'recharts';var DayChart=/*#__PURE__*/function(_React$Component){_inherits(DayChart,_React$Component);var _super=_createSuper(DayChart);function DayChart(){_classCallCheck(this,DayChart);return _super.apply(this,arguments);}_createClass(DayChart,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){return nextProps.showInfo!==this.props.showInfo||nextProps.dayLog!==this.props.dayLog;}},{key:\"render\",value:function render(){var _this=this;var chartData=this.props.showInfo[this.props.stationID]&&this.props.dayLog[this.props.stationID]&&this.props.dayLog[this.props.stationID].map(function(log){return{\"time\":log.datetime.substring(log.datetime.length-5),\"bikes\":log.bikes};}).slice(Math.max(this.props.dayLog[this.props.stationID].length-288,0));var xTicks=chartData&&chartData.map(function(log){return log.time;}).filter(function(time){return time.substring(time.length-2)===\"00\";}).concat(chartData.map(function(log){return log.time;})[chartData.length-1]);var yTicks=this.props.status&&[0,10,20,30,40,50,60,70,80,90,100].filter(function(x){return x<_this.props.status[_this.props.stationID].docks;}).concat([this.props.status[this.props.stationID].docks]);// [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\nvar timeNow=chartData&&chartData.map(function(log){return log.time;})[chartData.length-1];var CustomDot=function CustomDot(props){var payload=props.payload,cx=props.cx,cy=props.cy,key=props.key;return payload.time===timeNow&&/*#__PURE__*/React.createElement(Dot,{key:key,cx:cx,cy:cy,r:5,fill:\"white\"});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",{align:\"center\"},\"bike count over past 24 hours (every 5 mins)\"),/*#__PURE__*/React.createElement(ResponsiveContainer,{width:\"100%\",height:200},/*#__PURE__*/React.createElement(LineChart,{data:chartData,margin:{top:5,right:30,bottom:5,left:0}},/*#__PURE__*/React.createElement(CartesianGrid,{stroke:\"#222222\"}),/*#__PURE__*/React.createElement(ReferenceLine,{x:\"00:00\",stroke:\"#444444\",label:/*#__PURE__*/React.createElement(Label,{angle:270,offset:10,value:\"midnight\",position:\"insideLeft\",style:{textAnchor:'middle',fontSize:'80%',fill:\"#444444\"}})}),/*#__PURE__*/React.createElement(ReferenceLine,{x:\"12:00\",stroke:\"#444444\",label:/*#__PURE__*/React.createElement(Label,{angle:270,offset:10,value:\"noon\",position:\"insideLeft\",style:{textAnchor:'middle',fontSize:'80%',fill:\"#444444\"}})}),/*#__PURE__*/React.createElement(ReferenceLine,{x:timeNow,stroke:\"white\",label:/*#__PURE__*/React.createElement(Label,{angle:270,offset:10,value:\"current time\",position:\"insideLeft\",style:{textAnchor:'middle',fontSize:'80%',fill:\"#444444\"}})}),/*#__PURE__*/React.createElement(Line,{dot:CustomDot,isAnimationActive:true,type:\"monotone\",dataKey:\"bikes\",stroke:\"#00deff\",strokeWidth:5,animationDuration:500}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"time\",ticks:xTicks}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"bikes\",domain:[0,this.props.status[this.props.stationID].docks],ticks:yTicks}),/*#__PURE__*/React.createElement(Tooltip,{wrapperStyle:{color:\"black\"},itemStyle:{color:\"black\"},animationEasing:\"ease\"}))));}}]);return DayChart;}(React.Component);export default DayChart;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/DayChart.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","ReferenceLine","Label","Dot","DayChart","nextProps","nextState","showInfo","props","dayLog","chartData","stationID","map","log","datetime","substring","length","bikes","slice","Math","max","xTicks","time","filter","concat","yTicks","status","x","docks","timeNow","CustomDot","payload","cx","cy","key","top","right","bottom","left","textAnchor","fontSize","fill","color","Component"],"mappings":"ggBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,aAA1B,CAAyCC,KAAzC,CAAgDC,KAAhD,CAAuDC,OAAvD,CAAgEC,mBAAhE,CAAoFC,aAApF,CAAkGC,KAAlG,CAAwGC,GAAxG,KAAkH,UAAlH,C,GAGOC,CAAAA,Q,iSAEmBC,S,CAAWC,S,CAAW,CACxC,MAAQD,CAAAA,SAAS,CAACE,QAAV,GAAqB,KAAKC,KAAL,CAAWD,QAAhC,EAA0CF,SAAS,CAACI,MAAV,GAAmB,KAAKD,KAAL,CAAWC,MAAhF,CACD,C,uCAGK,gBAEJ,GAAIC,CAAAA,SAAS,CAAG,KAAKF,KAAL,CAAWD,QAAX,CAAoB,KAAKC,KAAL,CAAWG,SAA/B,GAA6C,KAAKH,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWG,SAA7B,CAA7C,EAAwF,KAAKH,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWG,SAA7B,EAAwCC,GAAxC,CAA4C,SAAAC,GAAG,QAAG,CACtJ,OAAOA,GAAG,CAACC,QAAJ,CAAaC,SAAb,CAAuBF,GAAG,CAACC,QAAJ,CAAaE,MAAb,CAAoB,CAA3C,CAD+I,CAEtJ,QAAQH,GAAG,CAACI,KAF0I,CAAH,EAA/C,EAGpGC,KAHoG,CAG9FC,IAAI,CAACC,GAAL,CAAS,KAAKZ,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWG,SAA7B,EAAwCK,MAAxC,CAAiD,GAA1D,CAA+D,CAA/D,CAH8F,CAAxG,CAKA,GAAIK,CAAAA,MAAM,CAAGX,SAAS,EAAIA,SAAS,CAACE,GAAV,CAAc,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACS,IAAN,EAAjB,EAA6BC,MAA7B,CAAoC,SAAAD,IAAI,QAAIA,CAAAA,IAAI,CAACP,SAAL,CAAeO,IAAI,CAACN,MAAL,CAAY,CAA3B,IAAiC,IAArC,EAAxC,EAAmFQ,MAAnF,CAA0Fd,SAAS,CAACE,GAAV,CAAc,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACS,IAAN,EAAjB,EAA6BZ,SAAS,CAACM,MAAV,CAAiB,CAA9C,CAA1F,CAA1B,CACA,GAAIS,CAAAA,MAAM,CAAE,KAAKjB,KAAL,CAAWkB,MAAX,EAAqB,CAAC,CAAD,CAAG,EAAH,CAAM,EAAN,CAAS,EAAT,CAAY,EAAZ,CAAe,EAAf,CAAkB,EAAlB,CAAqB,EAArB,CAAwB,EAAxB,CAA2B,EAA3B,CAA8B,GAA9B,EAAmCH,MAAnC,CAA0C,SAAAI,CAAC,QAAEA,CAAAA,CAAC,CAAC,KAAI,CAACnB,KAAL,CAAWkB,MAAX,CAAkB,KAAI,CAAClB,KAAL,CAAWG,SAA7B,EAAwCiB,KAA5C,EAA3C,EAA8FJ,MAA9F,CAAqG,CAAC,KAAKhB,KAAL,CAAWkB,MAAX,CAAkB,KAAKlB,KAAL,CAAWG,SAA7B,EAAwCiB,KAAzC,CAArG,CAAjC,CACA;AAEA,GAAIC,CAAAA,OAAO,CAAGnB,SAAS,EAAIA,SAAS,CAACE,GAAV,CAAc,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACS,IAAN,EAAjB,EAA6BZ,SAAS,CAACM,MAAV,CAAiB,CAA9C,CAA3B,CAEA,GAAMc,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACtB,KAAD,CAAW,IAClBuB,CAAAA,OADkB,CACIvB,KADJ,CAClBuB,OADkB,CACVC,EADU,CACIxB,KADJ,CACVwB,EADU,CACPC,EADO,CACIzB,KADJ,CACPyB,EADO,CACHC,GADG,CACI1B,KADJ,CACH0B,GADG,CAEzB,MAAOH,CAAAA,OAAO,CAACT,IAAR,GAAeO,OAAf,eAAwB,oBAAC,GAAD,EAAK,GAAG,CAAEK,GAAV,CAAe,EAAE,CAAEF,EAAnB,CAAsB,EAAE,CAAEC,EAA1B,CAA6B,CAAC,CAAE,CAAhC,CAAmC,IAAI,CAAC,OAAxC,EAA/B,CACH,CAHD,CAIA,mBACI,4CACI,0BAAI,KAAK,CAAE,QAAX,iDADJ,cAEI,oBAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,CAAkC,MAAM,CAAE,GAA1C,eACI,oBAAC,SAAD,EAAY,IAAI,CAAEvB,SAAlB,CAA6B,MAAM,CAAE,CAAEyB,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,EAAjB,CAAqBC,MAAM,CAAE,CAA7B,CAAgCC,IAAI,CAAE,CAAtC,CAArC,eAEA,oBAAC,aAAD,EAAgB,MAAM,CAAC,SAAvB,EAFA,cAGA,oBAAC,aAAD,EAAe,CAAC,CAAE,OAAlB,CAA2B,MAAM,CAAC,SAAlC,CAA4C,KAAK,cAAE,oBAAC,KAAD,EAAO,KAAK,CAAI,GAAhB,CAAqB,MAAM,CAAE,EAA7B,CAAiC,KAAK,CAAC,UAAvC,CAAkD,QAAQ,CAAC,YAA3D,CAAwE,KAAK,CAAE,CAAEC,UAAU,CAAE,QAAd,CAAwBC,QAAQ,CAAE,KAAlC,CAAyCC,IAAI,CAAE,SAA/C,CAA/E,EAAnD,EAHA,cAIA,oBAAC,aAAD,EAAe,CAAC,CAAE,OAAlB,CAA2B,MAAM,CAAC,SAAlC,CAA4C,KAAK,cAAE,oBAAC,KAAD,EAAO,KAAK,CAAI,GAAhB,CAAqB,MAAM,CAAE,EAA7B,CAAiC,KAAK,CAAC,MAAvC,CAA8C,QAAQ,CAAC,YAAvD,CAAoE,KAAK,CAAE,CAAEF,UAAU,CAAE,QAAd,CAAwBC,QAAQ,CAAE,KAAlC,CAAyCC,IAAI,CAAE,SAA/C,CAA3E,EAAnD,EAJA,cAKA,oBAAC,aAAD,EAAe,CAAC,CAAEZ,OAAlB,CAA2B,MAAM,CAAC,OAAlC,CAA0C,KAAK,cAAE,oBAAC,KAAD,EAAO,KAAK,CAAI,GAAhB,CAAqB,MAAM,CAAE,EAA7B,CAAiC,KAAK,CAAC,cAAvC,CAAsD,QAAQ,CAAC,YAA/D,CAA4E,KAAK,CAAE,CAAEU,UAAU,CAAE,QAAd,CAAwBC,QAAQ,CAAE,KAAlC,CAAyCC,IAAI,CAAE,SAA/C,CAAnF,EAAjD,EALA,cAMA,oBAAC,IAAD,EAAO,GAAG,CAAIX,SAAd,CAAyB,iBAAiB,CAAG,IAA7C,CAAoD,IAAI,CAAC,UAAzD,CAAoE,OAAO,CAAC,OAA5E,CAAoF,MAAM,CAAC,SAA3F,CAAqG,WAAW,CAAE,CAAlH,CAAqH,iBAAiB,CAAE,GAAxI,EANA,cAOA,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,CAAsB,KAAK,CAAIT,MAA/B,EAPA,cAQA,oBAAC,KAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,MAAM,CAAE,CAAC,CAAD,CAAI,KAAKb,KAAL,CAAWkB,MAAX,CAAkB,KAAKlB,KAAL,CAAWG,SAA7B,EAAwCiB,KAA5C,CAAhC,CAAoF,KAAK,CAAIH,MAA7F,EARA,cASA,oBAAC,OAAD,EAAS,YAAY,CAAI,CAACiB,KAAK,CAAC,OAAP,CAAzB,CAA0C,SAAS,CAAI,CAACA,KAAK,CAAC,OAAP,CAAvD,CAAwE,eAAe,CAAG,MAA1F,EATA,CADJ,CAFJ,CADJ,CAmBH,C,sBA3CmBjD,KAAK,CAACkD,S,EA6C9B,cAAevC,CAAAA,QAAf","sourcesContent":["import React from \"react\"\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip ,ResponsiveContainer,ReferenceLine,Label,Dot} from 'recharts';\n\n\nclass  DayChart extends React.Component{\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return  nextProps.showInfo!==this.props.showInfo||nextProps.dayLog!==this.props.dayLog ;    \n      }\n\n    \n    render(){\n        \n        let chartData = this.props.showInfo[this.props.stationID] && this.props.dayLog[this.props.stationID] && this.props.dayLog[this.props.stationID].map(log=>({\n            \"time\":log.datetime.substring(log.datetime.length-5),\n            \"bikes\":log.bikes\n        })).slice(Math.max(this.props.dayLog[this.props.stationID].length - 288, 0))\n\n        let xTicks = chartData && chartData.map(log=>log.time).filter(time => time.substring(time.length-2) ===\"00\").concat(chartData.map(log=>log.time)[chartData.length-1])\n        let yTicks =this.props.status && [0,10,20,30,40,50,60,70,80,90,100].filter(x=>x<this.props.status[this.props.stationID].docks).concat([this.props.status[this.props.stationID].docks])\n        // [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n\n        let timeNow = chartData && chartData.map(log=>log.time)[chartData.length-1]\n\n        const CustomDot = (props) => {\n            const {payload,cx,cy ,key} = props;\n            return payload.time===timeNow&&<Dot key={key} cx={cx}cy={cy}r={5} fill=\"white\"/>\n        }\n        return(\n            <div>\n                <h4 align =\"center\">bike count over past 24 hours (every 5 mins)</h4>\n                <ResponsiveContainer width=\"100%\" height={200}>\n                    <LineChart  data={chartData} margin={{ top: 5, right: 30, bottom: 5, left: 0 }}>\n                    \n                    <CartesianGrid  stroke=\"#222222\" />\n                    <ReferenceLine x={\"00:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"midnight\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <ReferenceLine x={\"12:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"noon\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <ReferenceLine x={timeNow} stroke=\"white\" label={<Label angle = {270} offset={10} value=\"current time\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <Line  dot = {CustomDot} isAnimationActive ={true}  type=\"monotone\" dataKey=\"bikes\" stroke=\"#00deff\" strokeWidth={5} animationDuration={500}/>\n                    <XAxis dataKey=\"time\" ticks = {xTicks}/>\n                    <YAxis  dataKey=\"bikes\" domain={[0, this.props.status[this.props.stationID].docks]} ticks = {yTicks}/>\n                    <Tooltip wrapperStyle = {{color:\"black\"}} itemStyle = {{color:\"black\"}} animationEasing = \"ease\"/>\n                    </LineChart>\n                </ResponsiveContainer>\n\n            </div>\n        )\n    }\n    }\nexport default DayChart"]},"metadata":{},"sourceType":"module"}