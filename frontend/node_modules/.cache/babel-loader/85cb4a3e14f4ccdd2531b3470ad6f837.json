{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js\";\nimport React from \"react\";\nimport L from \"leaflet\";\nimport { Map, Marker, TileLayer, Tooltip, Popup } from \"react-leaflet\";\nconst currentLocationIcon = new L.Icon({\n  iconUrl: require('./mapImages/currentLocation.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(20, 20)\n});\nconst stationIcon = new L.Icon({\n  iconUrl: require('./mapImages/station2.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(30, 30)\n});\n\nfunction pan(map, latitude, longitutde) {\n  map.setView([latitude, longitutde], 17);\n}\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\" + id);\n  element.scrollIntoView({\n    behavior: \"smooth\"\n  });\n}\n\nclass StationMap extends React.Component {\n  constructor() {\n    super();\n    this.mapRef = React.createRef();\n    this.state = {\n      newLocation: null\n    };\n    this.resetNewLocation = this.resetNewLocation.bind(this);\n    this.NewLocation = this.NewLocation.bind(this);\n  }\n\n  resetNewLocation() {\n    this.setState({\n      newLocation: null\n    });\n  }\n\n  NewLocation(e) {\n    console.log(\"map click\");\n    this.setState({\n      newLocation: e.latlng\n    });\n    console.log(this.state.newLocation);\n  }\n\n  componentDidMount() {\n    const mapRef = this.mapRef.current.leafletElement;\n    this.setState({\n      mapRef: mapRef\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showMap !== this.props.showMap || nextProps.stations !== this.props.stations || nextState.newLocation !== this.state.newLocation;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      style: {\n        height: this.props.view === \"Desktop\" ? \"calc(100vh - 175px)\" : 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: [this.props.selectedLocationLatitude, -this.props.selectedLocationLatitude],\n      zoom: 16,\n      ref: this.mapRef,\n      onClick: this.NewLocation,\n      onViewportChange: this.resetNewLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), this.props.stations.map(stationID => this.props.status[stationID]).map(station => /*#__PURE__*/React.createElement(Marker, {\n      key: station.id,\n      icon: stationIcon,\n      position: [station.latitude, station.longitude],\n      onClick: event => {\n        this.props.handleMapClick(event, station.id);\n        scrollToStation(station.id);\n        pan(this.state.mapRef, station.latitude, station.longitude);\n        this.resetNewLocation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      direction: \"top\",\n      offset: [0, -4],\n      opacity: .4,\n      permanent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: \"black\",\n        opacity: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }\n    }, station.bikes, \"/\", station.docks)))), /*#__PURE__*/React.createElement(Marker, {\n      icon: currentLocationIcon,\n      position: [this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), this.state.newLocation && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      icon: currentLocationIcon,\n      opacity: 0.5,\n      position: [this.state.newLocation.lat, this.state.newLocation.lng],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      position: [this.state.newLocation.lat, this.state.newLocation.lng],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: event => {\n        this.props.handleMapLocationChange(this.state.newLocation.lat, this.state.newLocation.lng);\n        console.log(\"new location\");\n      },\n      style: {\n        color: \"black\",\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"find stations\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 213\n      }\n    }), \" around here\"))))));\n  }\n\n}\n\nexport default StationMap;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js"],"names":["React","L","Map","Marker","TileLayer","Tooltip","Popup","currentLocationIcon","Icon","iconUrl","require","iconAnchor","iconSize","Point","stationIcon","pan","map","latitude","longitutde","setView","scrollToStation","id","element","document","getElementById","scrollIntoView","behavior","StationMap","Component","constructor","mapRef","createRef","state","newLocation","resetNewLocation","bind","NewLocation","setState","e","console","log","latlng","componentDidMount","current","leafletElement","shouldComponentUpdate","nextProps","nextState","showMap","props","stations","render","height","view","selectedLocationLatitude","stationID","status","station","longitude","event","handleMapClick","color","opacity","bikes","docks","locationCoordinates","selectedLocation","lat","lng","handleMapLocationChange","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\"\nimport { Map, Marker, TileLayer,Tooltip,Popup } from \"react-leaflet\";\n\nconst currentLocationIcon = new L.Icon({\n  iconUrl: require('./mapImages/currentLocation.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(20, 20),\n});\nconst stationIcon = new L.Icon({\n  iconUrl: require('./mapImages/station2.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(30, 30),\n});\n\nfunction pan(map,latitude,longitutde) {\n  map.setView([latitude,longitutde],17)\n}\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\"+id);\n  element.scrollIntoView({behavior: \"smooth\"});\n  }\n\n\nclass  StationMap extends React.Component{\n  \n  constructor() {\n    super()\n    this.mapRef = React.createRef();\n    this.state={\n      newLocation:null,\n    }\n\n    this.resetNewLocation = this.resetNewLocation.bind(this);\n    this.NewLocation = this.NewLocation.bind(this);\n  }\n\n  resetNewLocation() {\n    this.setState({ newLocation: null });\n  }\n\n  NewLocation(e) {\n    console.log(\"map click\")\n    this.setState({ newLocation: e.latlng });\n    console.log(this.state.newLocation)\n  }\n\n\n  componentDidMount (){\n    const mapRef = this.mapRef.current.leafletElement\n    this.setState({mapRef:mapRef})\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return  nextProps.showMap!==this.props.showMap||nextProps.stations!==this.props.stations||nextState.newLocation!==this.state.newLocation ;    \n  }\n\n  render(){    \n\n    return (\n      <div>\n        <div className =\"map-container\" style={{height:this.props.view===\"Desktop\"?\"calc(100vh - 175px)\":300}}>\n            <Map center={[this.props.selectedLocationLatitude, -this.props.selectedLocationLatitude]} zoom={16} ref = {this.mapRef} onClick={this.NewLocation} onViewportChange = {this.resetNewLocation}>\n            <TileLayer\n                url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n            />\n  \n            {this.props.stations.map(stationID=>(this.props.status[stationID])).map(station=>(\n\n              <Marker \n              key = {station.id} \n              icon = {stationIcon}\n              position = {[station.latitude,station.longitude]} \n              onClick = {(event)=>{this.props.handleMapClick(event,station.id);scrollToStation(station.id);pan(this.state.mapRef,station.latitude,station.longitude);this.resetNewLocation() }}>\n                <Tooltip direction='top' offset={[0, -4]} opacity={.4}  permanent>\n                         <h4 style= {{color:\"black\",opacity:1}}>{station.bikes}/{station.docks}</h4>\n                </Tooltip>\n              \n              </Marker>\n            \n            ))}\n            <Marker icon = {currentLocationIcon} position = {[this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude]}  />\n            {this.state.newLocation && <div><Marker  icon = {currentLocationIcon}  opacity = {0.5} position = {[this.state.newLocation.lat,this.state.newLocation.lng]}>\n              \n              </Marker>\n              <Popup position=  {[this.state.newLocation.lat,this.state.newLocation.lng]}  > \n              <a onClick={(event)=>{this.props.handleMapLocationChange(this.state.newLocation.lat,this.state.newLocation.lng);console.log(\"new location\")}}  style= {{color:\"black\",cursor:\"pointer\"}}>find stations<br/> around here</a>\n            </Popup>\n            </div>\n              }\n            \n            </Map>\n            \n        </div>\n        \n      </div>\n    );\n  }\n  \n}\nexport default StationMap"]},"metadata":{},"sourceType":"module"}