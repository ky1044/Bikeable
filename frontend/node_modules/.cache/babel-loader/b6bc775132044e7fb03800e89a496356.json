{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/WeekChart.js\";\nimport React from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine, Label } from 'recharts';\n\nclass WeekChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeDayArray = this.makeDayArray.bind(this);\n  }\n\n  makeDayArray(array) {\n    return array.map((numBikes, index) => {\n      if (numBikes < -1) {\n        return undefined;\n      } else {\n        return {\n          \"time\": this.props.logWeek[this.props.id][\"times\"][index],\n          \"bikes\": numBikes\n        };\n      }\n    }).filter(time => time != undefined);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showInfo !== this.props.showInfo || nextProps.log !== this.props.log;\n  }\n\n  render() {\n    let chartData = [{\n      name: \"Monday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesMonday\"])\n    }, {\n      name: \"Tuesday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesTuesday\"])\n    }, {\n      name: \"Wednesday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesWednesday\"])\n    }, {\n      name: \"Thursday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesThursday\"])\n    }, {\n      name: \"Friday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesFriday\"])\n    }, {\n      name: \"Saturday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesSaturday\"])\n    }, {\n      name: \"Sunday\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesSunday\"])\n    }, {\n      name: \"Today\",\n      data: this.makeDayArray(this.props.logWeek[this.props.id][\"bikesToday\"])\n    }];\n    console.log(chartData); // let chartData = this.props.showInfo[this.props.id] && this.props.log[this.props.id] && this.props.log[this.props.id].map(log=>({\n    //     \"time\":log.datetime.substring(log.datetime.length-5),\n    //     \"bikes\":log.bikes\n    // })).slice(Math.max(this.props.log[this.props.id].length - 288, 0))\n    // let xTicks = chartData && chartData.map(log=>log.time).filter(time => time.substring(time.length-2) ===\"00\").concat(chartData.map(log=>log.time)[chartData.length-1])\n    // let yTicks =this.props.status && [0,10,20,30,40,50,60,70,80,90,100].filter(x=>x<this.props.status[this.props.id].docks).concat([this.props.status[this.props.id].docks])\n\n    let xTicks = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100];\n    let yTicks = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"daily bike count over past week\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        bottom: 5,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#222222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"00:00\",\n      stroke: \"#444444\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"midnight\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"12:00\",\n      stroke: \"#444444\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"noon\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      dot: false,\n      isAnimationActive: true,\n      type: \"monotone\",\n      dataKey: \"bikes\",\n      stroke: \"#00deff\",\n      strokeWidth: 5,\n      animationDuration: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"time\",\n      ticks: xTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"bikes\",\n      domain: [0, this.props.status[this.props.id].docks],\n      ticks: yTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      wrapperStyle: {\n        color: \"black\"\n      },\n      itemStyle: {\n        color: \"black\"\n      },\n      animationEasing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default WeekChart;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/WeekChart.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","ReferenceLine","Label","WeekChart","Component","constructor","props","makeDayArray","bind","array","map","numBikes","index","undefined","logWeek","id","filter","time","shouldComponentUpdate","nextProps","nextState","showInfo","log","render","chartData","name","data","console","xTicks","yTicks","top","right","bottom","left","textAnchor","fontSize","fill","status","docks","color"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip ,ResponsiveContainer,ReferenceLine,Label} from 'recharts';\n\n\nclass  WeekChart extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.makeDayArray = this.makeDayArray.bind(this)\n    }\n\n    makeDayArray(array){\n        return array.map((numBikes, index)=>{\n            if (numBikes<-1){\n                return undefined\n            }else{\n                return {\"time\":this.props.logWeek[this.props.id][\"times\"][index],\"bikes\":numBikes}\n\n            }\n        }).filter( time=>time!=undefined)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return  nextProps.showInfo!==this.props.showInfo||nextProps.log!==this.props.log ;    \n      }\n\n    \n    render(){\n        let chartData =  [\n            {\n                name:\"Monday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesMonday\"])\n            },\n            {\n                name:\"Tuesday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesTuesday\"])\n            },\n            {\n                name:\"Wednesday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesWednesday\"])\n            },\n            {\n                name:\"Thursday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesThursday\"])\n            },\n            {\n                name:\"Friday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesFriday\"])\n            },\n            {\n                name:\"Saturday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesSaturday\"])\n            },\n            {\n                name:\"Sunday\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesSunday\"])\n            },\n            {\n                name:\"Today\",\n                data:this.makeDayArray(this.props.logWeek[this.props.id][\"bikesToday\"])\n            }\n\n        ]\n        console.log(chartData)\n\n\n        \n        // let chartData = this.props.showInfo[this.props.id] && this.props.log[this.props.id] && this.props.log[this.props.id].map(log=>({\n        //     \"time\":log.datetime.substring(log.datetime.length-5),\n        //     \"bikes\":log.bikes\n        // })).slice(Math.max(this.props.log[this.props.id].length - 288, 0))\n\n        // let xTicks = chartData && chartData.map(log=>log.time).filter(time => time.substring(time.length-2) ===\"00\").concat(chartData.map(log=>log.time)[chartData.length-1])\n        // let yTicks =this.props.status && [0,10,20,30,40,50,60,70,80,90,100].filter(x=>x<this.props.status[this.props.id].docks).concat([this.props.status[this.props.id].docks])\n        let xTicks = [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n        let yTicks = [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n        return(\n            <div>\n                <h4 align =\"center\">daily bike count over past week</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart  data={chartData} margin={{ top: 5, right: 30, bottom: 5, left: 0 }}>\n                    \n                    <CartesianGrid  stroke=\"#222222\" />\n                    <ReferenceLine x={\"00:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"midnight\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <ReferenceLine x={\"12:00\"} stroke=\"#444444\" label={<Label angle = {270} offset={10} value=\"noon\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <Line dot = {false} isAnimationActive ={true}  type=\"monotone\" dataKey=\"bikes\" stroke=\"#00deff\" strokeWidth={5} animationDuration={500}/>\n                    <XAxis dataKey=\"time\" ticks = {xTicks}/>\n                    <YAxis  dataKey=\"bikes\" domain={[0, this.props.status[this.props.id].docks]} ticks = {yTicks}/>\n                    <Tooltip wrapperStyle = {{color:\"black\"}} itemStyle = {{color:\"black\"}} animationEasing = \"ease\"/>\n                    </LineChart>\n                </ResponsiveContainer>\n\n            </div>\n        )\n    }\n    }\nexport default WeekChart"]},"metadata":{},"sourceType":"module"}