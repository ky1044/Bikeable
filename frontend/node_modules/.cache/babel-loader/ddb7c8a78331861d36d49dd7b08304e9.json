{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js\";\nimport React from \"react\";\nimport { Map, Marker, TileLayer, Tooltip } from \"react-leaflet\";\nimport currentLocation from \"./mapImages/currentLocation.png\";\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\" + id);\n  element.scrollIntoView({\n    behavior: \"smooth\"\n  });\n}\n\nclass StationMap extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showMap !== this.props.showMap || nextProps.stations !== this.props.stations;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      style: {\n        height: this.props.view === \"Desktop\" ? \"calc(100vh - 175px)\" : 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: [this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude],\n      zoom: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), this.props.stations.map(stationID => this.props.status[stationID]).map(station => /*#__PURE__*/React.createElement(Marker, {\n      key: station.id,\n      position: [station.latitude, station.longitude],\n      onClick: event => {\n        this.props.handleMapClick(event, station.id);\n        scrollToStation(station.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      direction: \"right\",\n      offset: [-8, -2],\n      opacity: 1,\n      permanent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }\n    }, station.bikes, \"/\", station.docks)))), /*#__PURE__*/React.createElement(Marker, {\n      position: [this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude],\n      icon: currentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default StationMap;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js"],"names":["React","Map","Marker","TileLayer","Tooltip","currentLocation","scrollToStation","id","element","document","getElementById","scrollIntoView","behavior","StationMap","Component","shouldComponentUpdate","nextProps","nextState","showMap","props","stations","render","height","view","locationCoordinates","selectedLocation","latitude","longitude","map","stationID","status","station","event","handleMapClick","color","bikes","docks"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Map, Marker, TileLayer,Tooltip } from \"react-leaflet\";\nimport currentLocation from \"./mapImages/currentLocation.png\"\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\"+id);\n  element.scrollIntoView({behavior: \"smooth\"});\n  }\n\nclass  StationMap extends React.Component{\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return  nextProps.showMap!==this.props.showMap||nextProps.stations!==this.props.stations ;    \n  }\n\n  render(){\n    return (\n      <div>\n        <div className =\"map-container\" style={{height:this.props.view===\"Desktop\"?\"calc(100vh - 175px)\":300}}>\n            <Map center={[this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude]} zoom={16}>\n            <TileLayer\n                url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n  \n            {this.props.stations.map(stationID=>(this.props.status[stationID])).map(station=>(\n\n              <Marker \n              key = {station.id} \n              position = {[station.latitude,station.longitude]} \n              onClick = {(event)=>{this.props.handleMapClick(event,station.id);scrollToStation(station.id)}}>\n                <Tooltip direction='right' offset={[-8, -2]} opacity={1} permanent>\n                         <h4 style= {{color:\"black\"}}>{station.bikes}/{station.docks}</h4>\n                </Tooltip>\n              \n              </Marker>\n            \n            ))}\n            <Marker position = {[this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude]} icon = {currentLocation} />\n            \n            </Map>\n            \n        </div>\n        \n      </div>\n    );\n  }\n  \n}\nexport default StationMap"]},"metadata":{},"sourceType":"module"}