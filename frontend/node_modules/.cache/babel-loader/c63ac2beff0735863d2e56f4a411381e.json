{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/WeekChart.js\";\nimport React from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine, Label, Dot } from 'recharts';\n\nclass WeekChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeDayArray = this.makeDayArray.bind(this);\n  }\n\n  makeDayArray(array) {\n    return array.map((numBikes, index) => {\n      if (numBikes === -1) {\n        return {\n          \"time\": this.props.weekLog[this.props.stationID][\"times\"][index],\n          \"bikes\": undefined\n        };\n      } else {\n        return {\n          \"time\": this.props.weekLog[this.props.stationID][\"times\"][index],\n          \"bikes\": numBikes\n        };\n      }\n    }).filter(time => time !== undefined);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showInfo !== this.props.showInfo || nextProps.weekLog !== this.props.weekLog;\n  }\n\n  render() {\n    console.log(this.props.weekLog[this.props.stationID]);\n    let chartData = [{\n      name: \"Monday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesMonday\"])\n    }, {\n      name: \"Tuesday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesTuesday\"])\n    }, {\n      name: \"Wednesday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesWednesday\"])\n    }, {\n      name: \"Thursday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesThursday\"])\n    }, {\n      name: \"Friday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesFriday\"])\n    }, {\n      name: \"Saturday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesSaturday\"])\n    }, {\n      name: \"Sunday\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesSunday\"])\n    }, {\n      name: \"Today\",\n      data: this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesToday\"])\n    }];\n    let xTicks = chartData && this.props.weekLog[this.props.stationID][\"times\"].filter(time => time.substring(time.length - 2) === \"00\").concat(chartData.map(log => log.time)[chartData.length - 1]);\n    let yTicks = this.props.status && [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100].filter(x => x < this.props.status[this.props.stationID].docks).concat([this.props.status[this.props.stationID].docks]);\n    let times = chartData && chartData[7][\"data\"].filter(a => a !== undefined).filter(a => a[\"bikes\"] !== undefined);\n    console.log(times[times.length - 1]);\n    let timeNow = \"10:00\"; // [   \n    //     chartData[7][\"data\"].filter(a=>a!==undefined).filter(a=>a[\"bikes\"]!==undefined).length-1\n    // ][\"time\"]\n\n    const CustomDot = props => {\n      const {\n        payload,\n        cx,\n        cy,\n        key\n      } = props; // console.log(payload.time===timeNow)\n\n      return payload.time === timeNow && /*#__PURE__*/React.createElement(Dot, {\n        key: key,\n        cx: cx,\n        cy: cy,\n        r: 5,\n        fill: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 44\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"bike count of past week (every 30 mins)\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        bottom: 5,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#222222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: timeNow,\n      stroke: \"white\",\n      label: /*#__PURE__*/React.createElement(Label, {\n        angle: 270,\n        offset: 10,\n        value: \"current time\",\n        position: \"insideLeft\",\n        style: {\n          textAnchor: 'middle',\n          fontSize: '80%',\n          fill: \"#444444\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 70\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"time\",\n      allowDuplicatedCategory: false,\n      ticks: xTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"bikes\",\n      domain: [0, this.props.status[this.props.stationID].docks],\n      ticks: yTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), chartData.map(s => /*#__PURE__*/React.createElement(Line, {\n      dataKey: \"bikes\",\n      data: s.data,\n      name: s.name,\n      key: s.name,\n      dot: s.name === \"Today\" && CustomDot,\n      isAnimationActive: true,\n      type: \"monotone\",\n      stroke: \"#00deff\",\n      strokeWidth: s.name === \"Today\" ? 5 : 4,\n      animationDuration: 500,\n      opacity: s.name === \"Today\" ? 1 : 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tooltip, {\n      wrapperStyle: {\n        color: \"black\"\n      },\n      itemStyle: {\n        color: \"black\"\n      },\n      animationEasing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default WeekChart;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/WeekChart.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","ReferenceLine","Label","Dot","WeekChart","Component","constructor","props","makeDayArray","bind","array","map","numBikes","index","weekLog","stationID","undefined","filter","time","shouldComponentUpdate","nextProps","nextState","showInfo","render","console","log","chartData","name","data","xTicks","substring","length","concat","yTicks","status","x","docks","times","a","timeNow","CustomDot","payload","cx","cy","key","top","right","bottom","left","textAnchor","fontSize","fill","s","color"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip ,ResponsiveContainer,ReferenceLine,Label,Dot} from 'recharts';\n\n\nclass  WeekChart extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.makeDayArray = this.makeDayArray.bind(this)\n    }\n\n\n    makeDayArray(array){\n        return array.map((numBikes, index)=>{\n            if (numBikes===-1){\n                return {\"time\":this.props.weekLog[this.props.stationID][\"times\"][index],\"bikes\":undefined}\n            }else{\n                return {\"time\":this.props.weekLog[this.props.stationID][\"times\"][index],\"bikes\":numBikes}\n\n            }\n        }).filter( time=>time!==undefined)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return  nextProps.showInfo!==this.props.showInfo||nextProps.weekLog!==this.props.weekLog ;    \n      }\n\n    \n    render(){\n        console.log(this.props.weekLog[this.props.stationID])\n        let chartData = [\n            \n            {\n                name:\"Monday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesMonday\"])\n            },\n            {\n                name:\"Tuesday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesTuesday\"])\n            },\n            {\n                name:\"Wednesday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesWednesday\"])\n            },\n            {\n                name:\"Thursday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesThursday\"])\n            },\n            {\n                name:\"Friday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesFriday\"])\n            },\n            {\n                name:\"Saturday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesSaturday\"])\n            },\n            {\n                name:\"Sunday\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesSunday\"])\n            },\n            {\n                name:\"Today\",\n                data:this.makeDayArray(this.props.weekLog[this.props.stationID][\"bikesToday\"])\n            }\n\n        ]\n        \n        \n\n\n        \n\n\n        let xTicks = chartData && this.props.weekLog[this.props.stationID][\"times\"].filter(time => time.substring(time.length-2) ===\"00\").concat(chartData.map(log=>log.time)[chartData.length-1])\n        let yTicks =this.props.status && [0,10,20,30,40,50,60,70,80,90,100].filter(x=>x<this.props.status[this.props.stationID].docks).concat([this.props.status[this.props.stationID].docks])\n\n        let times = chartData&&chartData[7][\"data\"].filter(a=>a!==undefined).filter(a=>a[\"bikes\"]!==undefined)\n        console.log(times[times.length-1])\n        let timeNow = \"10:00\"\n        // [   \n        //     chartData[7][\"data\"].filter(a=>a!==undefined).filter(a=>a[\"bikes\"]!==undefined).length-1\n        // ][\"time\"]\n\n        const CustomDot = (props) => {\n            const {payload,cx,cy ,key} = props;\n            // console.log(payload.time===timeNow)\n            return payload.time===timeNow&&<Dot key={key} cx={cx}cy={cy}r={5} fill=\"white\"/>\n        }\n        \n\n        return(\n            <div>\n                <h4 align =\"center\">bike count of past week (every 30 mins)</h4>\n                <ResponsiveContainer width=\"100%\" height={200}>\n                    <LineChart  data={chartData} margin={{ top: 5, right: 30, bottom: 5, left: 0 }}>\n                    \n                    <CartesianGrid  stroke=\"#222222\" />\n                    <ReferenceLine x={timeNow} stroke=\"white\" label={<Label angle = {270} offset={10} value=\"current time\" position='insideLeft' style={{ textAnchor: 'middle', fontSize: '80%', fill: \"#444444\"}}/>}/>\n                    <XAxis dataKey=\"time\" allowDuplicatedCategory={false} ticks ={xTicks}/>\n                    <YAxis  dataKey=\"bikes\" domain={[0, this.props.status[this.props.stationID].docks]} ticks = {yTicks}/>\n                    {chartData.map(s => (\n                        <Line dataKey=\"bikes\" data={s.data} name={s.name} key={s.name} dot = {s.name===\"Today\"&&CustomDot} isAnimationActive ={true}  type=\"monotone\" stroke=\"#00deff\" strokeWidth={s.name===\"Today\"?5:4} animationDuration={500} opacity={s.name===\"Today\"?1:0.5} />\n                    ))}\n                    <Tooltip wrapperStyle = {{color:\"black\"}} itemStyle = {{color:\"black\"}} animationEasing = \"ease\"/>\n                    </LineChart>\n                </ResponsiveContainer>\n\n            </div>\n        )\n    }\n    }\nexport default WeekChart"]},"metadata":{},"sourceType":"module"}