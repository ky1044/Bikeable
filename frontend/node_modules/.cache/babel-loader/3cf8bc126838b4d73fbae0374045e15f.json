{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js\";\nimport React from \"react\";\nimport L from \"leaflet\";\nimport { Map, Marker, TileLayer, Tooltip } from \"react-leaflet\";\nimport currentLocation from \"./mapImages/currentLocation.png\";\nconst currentLocationIcon = new L.Icon({\n  iconUrl: require('./mapImages/currentLocation.png'),\n  // iconRetinaUrl: require('./mapImages/currentLocation.png'),\n  iconAnchor: null,\n  // popupAnchor: null,\n  // shadowUrl: null,\n  // shadowSize: null,\n  // shadowAnchor: null,\n  iconSize: new L.Point(20, 20) // className: 'leaflet-div-icon'\n\n});\nconst stationIcon = new L.Icon({\n  iconUrl: require('./mapImages/station2.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(30, 30)\n});\n\nfunction pan(map, latitude, longitutde) {\n  map.panTo([latitude, longitutde]);\n}\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\" + id);\n  element.scrollIntoView({\n    behavior: \"smooth\"\n  });\n}\n\nclass StationMap extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const mapRef = this.refs.map.leafletElement;\n    this.setState({\n      mapRef: mapRef\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.showMap !== this.props.showMap || nextProps.stations !== this.props.stations;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      style: {\n        height: this.props.view === \"Desktop\" ? \"calc(100vh - 175px)\" : 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: [this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude],\n      zoom: 16,\n      ref: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), this.props.stations.map(stationID => this.props.status[stationID]).map(station => /*#__PURE__*/React.createElement(Marker, {\n      key: station.id,\n      icon: stationIcon,\n      position: [station.latitude, station.longitude],\n      onClick: event => {\n        this.props.handleMapClick(event, station.id);\n        scrollToStation(station.id);\n        pan(this.state.map, station.latitude, station.longitude);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      direction: \"top\",\n      offset: [0, -4],\n      opacity: .4,\n      permanent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: \"black\",\n        opacity: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }\n    }, station.bikes, \"/\", station.docks)))), /*#__PURE__*/React.createElement(Marker, {\n      icon: currentLocationIcon,\n      position: [this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default StationMap;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/StationMap.js"],"names":["React","L","Map","Marker","TileLayer","Tooltip","currentLocation","currentLocationIcon","Icon","iconUrl","require","iconAnchor","iconSize","Point","stationIcon","pan","map","latitude","longitutde","panTo","scrollToStation","id","element","document","getElementById","scrollIntoView","behavior","StationMap","Component","constructor","state","componentDidMount","mapRef","refs","leafletElement","setState","shouldComponentUpdate","nextProps","nextState","showMap","props","stations","render","height","view","locationCoordinates","selectedLocation","longitude","stationID","status","station","event","handleMapClick","color","opacity","bikes","docks"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\"\nimport { Map, Marker, TileLayer,Tooltip } from \"react-leaflet\";\nimport currentLocation from \"./mapImages/currentLocation.png\"\n\nconst currentLocationIcon = new L.Icon({\n  iconUrl: require('./mapImages/currentLocation.png'),\n  // iconRetinaUrl: require('./mapImages/currentLocation.png'),\n  iconAnchor: null,\n  // popupAnchor: null,\n  // shadowUrl: null,\n  // shadowSize: null,\n  // shadowAnchor: null,\n  iconSize: new L.Point(20, 20),\n  // className: 'leaflet-div-icon'\n});\nconst stationIcon = new L.Icon({\n  iconUrl: require('./mapImages/station2.png'),\n  iconAnchor: null,\n  iconSize: new L.Point(30, 30),\n\n});\n\nfunction pan(map,latitude,longitutde) {\n  map.panTo([latitude,longitutde])\n}\n\nasync function scrollToStation(id) {\n  let element = document.getElementById(\"station_\"+id);\n  element.scrollIntoView({behavior: \"smooth\"});\n  }\n\nclass  StationMap extends React.Component{\n  \n  constructor() {\n    super()\n    this.state={}\n  }\n\n\n  componentDidMount (){\n    const mapRef = this.refs.map.leafletElement\n    this.setState({mapRef:mapRef})\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return  nextProps.showMap!==this.props.showMap||nextProps.stations!==this.props.stations ;    \n  }\n\n  render(){    \n\n    return (\n      <div>\n        <div className =\"map-container\" style={{height:this.props.view===\"Desktop\"?\"calc(100vh - 175px)\":300}}>\n            <Map center={[this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude]} zoom={16} ref = 'map'>\n            <TileLayer\n                url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n  \n            {this.props.stations.map(stationID=>(this.props.status[stationID])).map(station=>(\n\n              <Marker \n              key = {station.id} \n              icon = {stationIcon}\n              position = {[station.latitude,station.longitude]} \n              onClick = {(event)=>{this.props.handleMapClick(event,station.id);scrollToStation(station.id);pan(this.state.map,station.latitude,station.longitude)}}>\n                <Tooltip direction='top' offset={[0, -4]} opacity={.4}  permanent>\n                         <h4 style= {{color:\"black\",opacity:1}}>{station.bikes}/{station.docks}</h4>\n                </Tooltip>\n              \n              </Marker>\n            \n            ))}\n            <Marker icon = {currentLocationIcon} position = {[this.props.locationCoordinates[this.props.selectedLocation].latitude, -this.props.locationCoordinates[this.props.selectedLocation].longitude]}  />\n            \n            </Map>\n            \n        </div>\n        \n      </div>\n    );\n  }\n  \n}\nexport default StationMap"]},"metadata":{},"sourceType":"module"}