{"ast":null,"code":"var _jsxFileName = \"/Users/keny/Desktop/Programming/Bikeable/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport LocationCard from \"./components/LocationCard\";\nimport StationCard from \"./components/StationCard\";\nimport Footer from \"./components/Footer\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      warnings: null,\n      selectedLocation: \"Washington Square Park\",\n      locationCoordinates: {\n        \"Washington Square Park\": {\n          latitude: 40.7308,\n          longitude: 73.9973\n        },\n        \"Union Square Park\": {\n          latitude: 40.7359,\n          longitude: 73.9911\n        },\n        \"Times Square\": {\n          latitude: 40.7580,\n          longitude: 73.9911\n        },\n        \"Bowling Green\": {\n          latitude: 40.7050,\n          longitude: 74.0137\n        },\n        \"The MET\": {\n          latitude: 40.7794,\n          longitude: 73.9632\n        },\n        \"Penn Station\": {\n          latitude: 40.7506,\n          longitude: 73.9935\n        }\n      },\n      latitude: 40.7308,\n      longitude: 73.9973,\n      numStations: 5,\n      stations: [],\n      initialBikeCount: {},\n      logBikeCount: {},\n      status: {},\n      log: {},\n      logWeek: {},\n      hasloaded: false,\n      loadTime: null,\n      updateTime: null,\n      timeSinceUpdate: null,\n      timeSinceLoad: null,\n      showInfo: {}\n    };\n    this.getStationStatus = this.getStationStatus.bind(this);\n    this.setStationStatus = this.setStationStatus.bind(this);\n    this.handleShowChange = this.handleShowChange.bind(this);\n    this.getStationLog = this.getStationLog.bind(this);\n    this.setStationLog = this.setStationLog.bind(this);\n    this.getStationLogWeek = this.getStationLogWeek.bind(this);\n    this.setStationLogWeek = this.setStationLogWeek.bind(this);\n    this.loadMoreStations = this.loadMoreStations.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n  }\n\n  getStationStatus() {\n    fetch(`stationstatus/${this.state.numStations}/${this.state.locationCoordinates[this.state.selectedLocation].latitude},${this.state.locationCoordinates[this.state.selectedLocation].longitude}`).then(res => res.json()).then(data => this.setStationStatus(data));\n  }\n\n  setStationStatus(data) {\n    let stationList = data.stationStatus.map(station => {\n      return station.id;\n    });\n\n    if (!this.state.loadTime) {\n      this.setState({\n        loadTime: Date.now()\n      });\n    }\n\n    this.setState({\n      updateTime: Date.now()\n    });\n\n    for (let stationI = 0; stationI < stationList.length; stationI++) {\n      this.setState(prevState => ({\n        status: { ...prevState.status,\n          [stationList[stationI]]: data.stationStatus[stationI]\n        }\n      }));\n\n      if (stationList[stationI] in this.state.initialBikeCount) {\n        const prevStationState = this.state.logBikeCount[stationList[stationI]].concat([this.state.status[stationList[stationI]].bikes]);\n        this.setState(prevState => ({\n          logBikeCount: { ...prevState.logBikeCount,\n            [stationList[stationI]]: prevStationState\n          }\n        }));\n      } else {\n        this.setState(prevState => ({\n          showInfo: { ...prevState.showInfo,\n            [stationList[stationI]]: false\n          },\n          initialBikeCount: { ...prevState.initialBikeCount,\n            [stationList[stationI]]: this.state.status[stationList[stationI]].bikes\n          },\n          logBikeCount: { ...prevState.logBikeCount,\n            [stationList[stationI]]: [this.state.status[stationList[stationI]].bikes]\n          }\n        }));\n      }\n\n      this.getStationLog(stationList[stationI]);\n      this.getStationLogWeek(stationList[stationI]);\n    }\n\n    this.setState({\n      stations: stationList\n    });\n    this.setState({\n      hasloaded: true\n    });\n    console.log(\"updated station status\");\n  }\n\n  getStationLog(stationID) {\n    fetch(`stationlog/${stationID}`).then(res => res.json()).then(data => this.setStationLog(data, stationID)); // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLog(data, stationID) {\n    this.setState(prevState => ({\n      log: { ...prevState.log,\n        [stationID]: data.stationLog\n      }\n    }));\n  }\n\n  getStationLogWeek(stationID) {\n    fetch(`stationlogweek/${stationID}`).then(res => res.json()).then(data => this.setStationLogWeek(data, stationID)); // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLogWeek(data, stationID) {\n    this.setState(prevState => ({\n      logWeek: { ...prevState.logWeek,\n        [stationID]: data.stationLog\n      }\n    })); // console.log(this.state.logWeek[stationID])\n  }\n\n  handleShowChange(id) {\n    this.setState(prevState => {\n      const newShow = !prevState.showInfo[id];\n      return {\n        showInfo: { ...prevState.showInfo,\n          [id]: newShow\n        }\n      };\n    });\n  }\n\n  async handleLocationChange(name) {\n    await this.setState({\n      selectedLocation: name,\n      numStations: 5,\n      stations: [],\n      initialBikeCount: {},\n      logBikeCount: {},\n      status: {},\n      log: {},\n      logWeek: {},\n      hasloaded: false,\n      loadTime: null,\n      updateTime: null,\n      timeSinceUpdate: null,\n      timeSinceLoad: null,\n      showInfo: {}\n    });\n    this.getStationStatus();\n  }\n\n  async loadMoreStations() {\n    await this.setState(prevState => ({\n      numStations: prevState.numStations + 5\n    }));\n    this.getStationStatus();\n  }\n\n  componentDidMount() {\n    this.getStationStatus();\n    setInterval(() => this.setState(prevState => ({\n      timeSinceUpdate: Date.now() - prevState.updateTime,\n      timeSinceLoad: Date.now() - prevState.loadTime\n    })), 100);\n    setInterval(() => this.getStationStatus(), 30000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), !this.state.hasloaded && /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(LocationCard, Object.assign({}, this.state, {\n      handleLocationChange: this.handleLocationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    })), this.state.stations.map(id => /*#__PURE__*/React.createElement(StationCard, Object.assign({\n      key: id,\n      id: id\n    }, this.state, {\n      handleShowChange: this.handleShowChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }))), this.state.hasloaded && this.state.stations.length < 30 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"load-more\",\n      onClick: () => this.loadMoreStations(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 74\n      }\n    }, \"Load More Stations\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 164\n      }\n    })), this.state.hasloaded && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/App.js"],"names":["React","Header","LocationCard","StationCard","Footer","App","Component","constructor","state","warnings","selectedLocation","locationCoordinates","latitude","longitude","numStations","stations","initialBikeCount","logBikeCount","status","log","logWeek","hasloaded","loadTime","updateTime","timeSinceUpdate","timeSinceLoad","showInfo","getStationStatus","bind","setStationStatus","handleShowChange","getStationLog","setStationLog","getStationLogWeek","setStationLogWeek","loadMoreStations","handleLocationChange","fetch","then","res","json","data","stationList","stationStatus","map","station","id","setState","Date","now","stationI","length","prevState","prevStationState","concat","bikes","console","stationID","stationLog","newShow","name","componentDidMount","setInterval","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport LocationCard from \"./components/LocationCard\"\nimport StationCard from \"./components/StationCard\"\nimport Footer from \"./components/Footer\"\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      warnings:null,\n\n      selectedLocation:\"Washington Square Park\",\n      locationCoordinates:{\n        \"Washington Square Park\":{latitude :40.7308,longitude:73.9973},\n        \"Union Square Park\":{latitude:40.7359, longitude:73.9911},\n        \"Times Square\":{latitude:40.7580,longitude:73.9911},\n        \"Bowling Green\":{latitude:40.7050, longitude:74.0137},\n        \"The MET\":{latitude:40.7794, longitude:73.9632},\n        \"Penn Station\":{latitude:40.7506,longitude:73.9935},\n      },\n      latitude :40.7308,\n      longitude:73.9973,\n      numStations:5,\n\n      stations:[],\n      initialBikeCount:{},\n      logBikeCount:{},\n      status:{},\n      log :{},\n      logWeek :{},\n      \n      hasloaded:false,\n\n      loadTime: null,\n      updateTime :null,\n      timeSinceUpdate:null,\n      timeSinceLoad:null,\n      \n      showInfo:{}\n    }\n    this.getStationStatus = this.getStationStatus.bind(this);\n    this.setStationStatus = this.setStationStatus.bind(this);\n    this.handleShowChange = this.handleShowChange.bind(this);\n    this.getStationLog = this.getStationLog.bind(this);\n    this.setStationLog = this.setStationLog.bind(this);\n    this.getStationLogWeek = this.getStationLogWeek.bind(this);\n    this.setStationLogWeek = this.setStationLogWeek.bind(this);\n    this.loadMoreStations = this.loadMoreStations.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n\n    \n  }\n\n  getStationStatus(){\n    fetch(`stationstatus/${this.state.numStations}/${this.state.locationCoordinates[this.state.selectedLocation].latitude},${this.state.locationCoordinates[this.state.selectedLocation].longitude}`).then(res=>res.json()).then(data=>(\n      this.setStationStatus(data)\n    ))\n  }\n  setStationStatus(data){\n\n    let stationList = data.stationStatus.map(station=>{return station.id})\n    \n    if (!this.state.loadTime){\n      this.setState({ \n        loadTime:Date.now()\n       });\n\n     }\n\n     this.setState({\n      updateTime: Date.now()\n    })\n         \n\n     for (let stationI = 0; stationI < stationList.length; stationI++){\n      this.setState(prevState=>({ \n        status:{\n          ...prevState.status,\n          [stationList[stationI]]:data.stationStatus[stationI]\n        }\n       }));\n      \n       if (stationList[stationI] in this.state.initialBikeCount){\n         const prevStationState = this.state.logBikeCount[stationList[stationI]].concat([this.state.status[stationList[stationI]].bikes])\n        this.setState(prevState=>({ \n          logBikeCount:{\n            ...prevState.logBikeCount,\n            [stationList[stationI]]:prevStationState\n          }\n         }));\n       }else{\n        this.setState(prevState=>({ \n          showInfo:{\n            ...prevState.showInfo,\n            [stationList[stationI]]:false\n          },\n          initialBikeCount:{\n            ...prevState.initialBikeCount,\n            [stationList[stationI]]:this.state.status[stationList[stationI]].bikes\n          },\n          logBikeCount:{\n            ...prevState.logBikeCount,\n            [stationList[stationI]]:[this.state.status[stationList[stationI]].bikes]\n          }\n         }));\n         \n       }\n       this.getStationLog(stationList[stationI])\n       this.getStationLogWeek(stationList[stationI])\n       \n     }\n     this.setState({\n      stations:stationList\n\n    })\n     \n     this.setState({ \n      hasloaded:true\n     });\n     console.log(\"updated station status\")\n  }\n\n  getStationLog(stationID){\n    fetch(`stationlog/${stationID}`).then(res=>res.json()).then(data=>(\n      this.setStationLog(data,stationID)\n    ))\n    // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLog(data,stationID){\n\n\n      this.setState(prevState=>({\n        log:{\n          ...prevState.log,\n          [stationID]:data.stationLog\n        }\n      }))\n    \n  }\n\n  getStationLogWeek(stationID){\n    fetch(`stationlogweek/${stationID}`).then(res=>res.json()).then(data=>(\n      this.setStationLogWeek(data,stationID)\n    ))\n    // console.log(\"updated station \"+stationID+\" logs\")\n  }\n\n  setStationLogWeek(data,stationID){\n\n      this.setState(prevState=>({\n        logWeek:{\n          ...prevState.logWeek,\n          [stationID]:data.stationLog\n        }\n      }))\n      // console.log(this.state.logWeek[stationID])\n    \n  }\n\n  handleShowChange(id){\n    this.setState( prevState =>{\n      const newShow = !prevState.showInfo[id]\n      return { \n      showInfo:{\n        ...prevState.showInfo,\n        [id]:newShow\n      }\n     }})\n  }\n\n  async handleLocationChange(name){\n    await this.setState( {\n      selectedLocation:name,\n      numStations:5,\n      stations:[],\n      initialBikeCount:{},\n      logBikeCount:{},\n      status:{},\n      log :{},\n      logWeek :{},\n      hasloaded:false,\n      loadTime: null,\n      updateTime :null,\n      timeSinceUpdate:null,\n      timeSinceLoad:null,\n      showInfo:{}\n    })\n    this.getStationStatus()\n  }\n\n  async loadMoreStations(){\n    await this.setState(prevState=>({\n      numStations: prevState.numStations+5\n    }))\n    this.getStationStatus()\n\n  }\n\n  componentDidMount() {\n    this.getStationStatus()\n    setInterval(() => this.setState(prevState=>({ timeSinceUpdate: Date.now()-prevState.updateTime,timeSinceLoad:Date.now()-prevState.loadTime})), 100)\n    setInterval(() => this.getStationStatus(), 30000)\n      \n  }\n\n\n\n  render(){\n\n    return (\n    \n      <div>\n        <Header/>\n        {!this.state.hasloaded&&<h2 style={{textAlign: \"center\"}}>Loading...</h2>}\n        <LocationCard {...this.state} handleLocationChange = {this.handleLocationChange} />\n        {this.state.stations.map( id =>(\n          <StationCard\n          key={id}\n          id = {id}\n          {...this.state}\n\n          handleShowChange = {this.handleShowChange}\n          />\n        ) )}\n      \n          {this.state.hasloaded && this.state.stations.length<30 && <div><h3 className = \"load-more\" onClick={()=>this.loadMoreStations() }>Load More Stations</h3><br/></div>}\n\n        {this.state.hasloaded&&<Footer/>}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}