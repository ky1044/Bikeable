{"ast":null,"code":"import _classCallCheck from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/keny/Desktop/Programming/Bikeable/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Autosuggest from'react-autosuggest';import'./Search.css';var getSuggestions=function getSuggestions(value,locations){var inputValue=value.trim().toLowerCase();var inputLength=inputValue.length;return locations.filter(function(loc){return loc.toLowerCase().slice(0,inputLength)===inputValue;});};function shouldRenderSuggestions(){return true;}var renderSuggestion=function renderSuggestion(suggestion){return/*#__PURE__*/React.createElement(\"div\",null,suggestion);};var SearchLocations=/*#__PURE__*/function(_React$Component){_inherits(SearchLocations,_React$Component);var _super=_createSuper(SearchLocations);function SearchLocations(){var _this;_classCallCheck(this,SearchLocations);_this=_super.call(this);// Autosuggest is a controlled component.\n// This means that you need to provide an input value\n// and an onChange handler that updates this value (see below).\n// Suggestions also need to be provided to the Autosuggest,\n// and they are initially empty because the Autosuggest is closed.\n_this.getSuggestionValue=function(suggestion){_this.props.handleLocationChange(suggestion);return suggestion;};_this.onChange=function(event,_ref){var newValue=_ref.newValue;_this.setState({value:newValue});};_this.onSuggestionsFetchRequested=function(_ref2){var value=_ref2.value;_this.setState({suggestions:getSuggestions(value,Object.keys(_this.props.locationCoordinates).map(function(key,index){return key;})).filter(function(key,index){return index<5;})});};_this.onSuggestionsClearRequested=function(){_this.setState({suggestions:[]});};_this.state={value:'',suggestions:[]};return _this;}_createClass(SearchLocations,[{key:\"render\",value:function render(){var _this$state=this.state,value=_this$state.value,suggestions=_this$state.suggestions;// Autosuggest will pass through all these props to the input.\nvar inputProps={placeholder:'Search Locations',value:value,onChange:this.onChange};// Finally, render it!\nreturn/*#__PURE__*/React.createElement(Autosuggest,{suggestions:suggestions,onSuggestionsFetchRequested:this.onSuggestionsFetchRequested,onSuggestionsClearRequested:this.onSuggestionsClearRequested,getSuggestionValue:this.getSuggestionValue,shouldRenderSuggestions:shouldRenderSuggestions,renderSuggestion:renderSuggestion,inputProps:inputProps});}}]);return SearchLocations;}(React.Component);export default SearchLocations;","map":{"version":3,"sources":["/Users/keny/Desktop/Programming/Bikeable/frontend/src/components/SearchLocations.js"],"names":["React","Autosuggest","getSuggestions","value","locations","inputValue","trim","toLowerCase","inputLength","length","filter","loc","slice","shouldRenderSuggestions","renderSuggestion","suggestion","SearchLocations","getSuggestionValue","props","handleLocationChange","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","Object","keys","locationCoordinates","map","key","index","onSuggestionsClearRequested","state","inputProps","placeholder","Component"],"mappings":"ggBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAO,cAAP,CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAOC,SAAP,CAAqB,CACxC,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,IAAN,GAAaC,WAAb,EAAnB,CACA,GAAMC,CAAAA,WAAW,CAAGH,UAAU,CAACI,MAA/B,CAEA,MAAOL,CAAAA,SAAS,CAACM,MAAV,CAAiB,SAAAC,GAAG,QACvBA,CAAAA,GAAG,CAACJ,WAAJ,GAAkBK,KAAlB,CAAwB,CAAxB,CAA2BJ,WAA3B,IAA4CH,UADrB,EAApB,CAAP,CAGD,CAPH,CAUA,QAASQ,CAAAA,uBAAT,EAAmC,CAC/B,MAAO,KAAP,CACC,CAGL,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,UAAU,qBAC/B,+BACIA,UADJ,CAD+B,EAAnC,C,GAMMC,CAAAA,e,8HACF,0BAAc,iDACZ,wBAEA;AACA;AACA;AACA;AACA;AAPY,MAadC,kBAbc,CAaO,SAAAF,UAAU,CAAI,CAC/B,MAAKG,KAAL,CAAWC,oBAAX,CAAgCJ,UAAhC,EACA,MAAOA,CAAAA,UAAP,CAAkB,CAfR,OAiBdK,QAjBc,CAiBH,SAACC,KAAD,MAAyB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAClC,MAAKC,QAAL,CAAc,CACZpB,KAAK,CAAEmB,QADK,CAAd,EAGD,CArBa,OAyBdE,2BAzBc,CAyBgB,eAAe,IAAZrB,CAAAA,KAAY,OAAZA,KAAY,CAC3C,MAAKoB,QAAL,CAAc,CACZE,WAAW,CAAEvB,cAAc,CAACC,KAAD,CAAOuB,MAAM,CAACC,IAAP,CAAY,MAAKT,KAAL,CAAWU,mBAAvB,EAA4CC,GAA5C,CAAgD,SAACC,GAAD,CAAKC,KAAL,QAC9ED,CAAAA,GAD8E,EAAhD,CAAP,CAAd,CAELpB,MAFK,CAEE,SAACoB,GAAD,CAAKC,KAAL,QAAcA,CAAAA,KAAK,CAAC,CAApB,EAFF,CADD,CAAd,EAKD,CA/Ba,OAkCdC,2BAlCc,CAkCgB,UAAM,CAClC,MAAKT,QAAL,CAAc,CACZE,WAAW,CAAE,EADD,CAAd,EAGD,CAtCa,CAQZ,MAAKQ,KAAL,CAAa,CACX9B,KAAK,CAAE,EADI,CAEXsB,WAAW,CAAE,EAFF,CAAb,CARY,aAYb,C,mEA4BQ,iBACwB,KAAKQ,KAD7B,CACC9B,KADD,aACCA,KADD,CACQsB,WADR,aACQA,WADR,CAGP;AACA,GAAMS,CAAAA,UAAU,CAAG,CACjBC,WAAW,CAAE,kBADI,CAEjBhC,KAAK,CAALA,KAFiB,CAGjBiB,QAAQ,CAAE,KAAKA,QAHE,CAAnB,CAMA;AACA,mBACE,oBAAC,WAAD,EACE,WAAW,CAAEK,WADf,CAEE,2BAA2B,CAAE,KAAKD,2BAFpC,CAGE,2BAA2B,CAAE,KAAKQ,2BAHpC,CAIE,kBAAkB,CAAE,KAAKf,kBAJ3B,CAKE,uBAAuB,CAAEJ,uBAL3B,CAME,gBAAgB,CAAEC,gBANpB,CAOE,UAAU,CAAEoB,UAPd,EADF,CAWD,C,6BA/DyBlC,KAAK,CAACoC,S,EAiEpC,cAAepB,CAAAA,eAAf","sourcesContent":["import React from \"react\"\nimport Autosuggest from 'react-autosuggest';\nimport './Search.css';\n  \n\nconst getSuggestions = (value,locations) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return locations.filter(loc =>\n        loc.toLowerCase().slice(0, inputLength) === inputValue\n    );\n  };\n\n\nfunction shouldRenderSuggestions() {\n    return true;\n    }\n  \n\nconst renderSuggestion = suggestion => (\n    <div >\n       {suggestion}\n    </div>\n  );\n\nclass SearchLocations extends React.Component{\n    constructor() {\n      super();\n  \n      // Autosuggest is a controlled component.\n      // This means that you need to provide an input value\n      // and an onChange handler that updates this value (see below).\n      // Suggestions also need to be provided to the Autosuggest,\n      // and they are initially empty because the Autosuggest is closed.\n      this.state = {\n        value: '',\n        suggestions: []\n      };\n    }\n    getSuggestionValue = suggestion => {\n        this.props.handleLocationChange(suggestion);\n        return suggestion}\n  \n    onChange = (event, { newValue }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n  \n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value }) => {\n      this.setState({\n        suggestions: getSuggestions(value,Object.keys(this.props.locationCoordinates).map((key,index)=>(\n            key\n            ))).filter((key,index)=>(index<5))\n      });\n    };\n  \n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n  \n    render() {\n      const { value, suggestions } = this.state;\n  \n      // Autosuggest will pass through all these props to the input.\n      const inputProps = {\n        placeholder: 'Search Locations',\n        value,\n        onChange: this.onChange\n      };\n  \n      // Finally, render it!\n      return (\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={this.getSuggestionValue}\n          shouldRenderSuggestions={shouldRenderSuggestions}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n        />\n      );\n    }\n  }\nexport default SearchLocations"]},"metadata":{},"sourceType":"module"}